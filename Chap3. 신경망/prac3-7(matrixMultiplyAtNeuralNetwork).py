# 넘파이 행렬을 이용하여 신경망 구현
# 편향과 활성화 함수를 생략하여 입력값, 가중치, 출력값만 갖는 아주 단순한 형태의 신경망
# 입력 값(X)이 2개이고, 출력 값(Y)이 3개
# 가중치는 입력값(X)의 수(2) × 출력값(Y)의 수(3) == 6개 존재 (가중치는 2×3 크기의 행렬이라 볼 수 있음)

# (입력값 배열의 크기(2) == 가중치 행렬의 행의 수(2))이므로 행렬곱으로 계산하여 (가중치 행렬의 열의 수(3) == 출력값(Y)의 수(3))를 가진 결과 도출 가능


import numpy as np

# 2개의 입력 값을 2 크기의 배열로 X에 저장
X = np.array([1,2])
print(X.shape)

# 6개의 가중치를 2×3 크기의 행렬로 W에 저장
W = np.array([[1,3,5],[2,4,6]])
print(W)
print(W.shape)

# X와 W의 행렬곱(결과 값)을 Y에 저장
Y = np.dot(X,W)

# Y 출력
print(Y)